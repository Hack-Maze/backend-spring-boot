name: Java-CI 

on: 
  workflow_dispatch:

  push: 
    branches:
      - '*'
      - '!CI-**'
      
    paths-ignore:    
        - '*.md'
        - 'docker-compose.yml'
        - '.github/workflows/*'
  pull_request:
    branches:
      - '*'
      - '!CI-**'
      
    paths-ignore:    
        - '*.md'
        - 'docker-compose.yml'
        - '.github/workflows/*'

permissions:
  contents: read

jobs:



  notify_Discord:
    if: ${{ github.actor != 'dependabot[bot]' && !contains(github.event.head_commit.message, 'dependabot') }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: notify Backend CI Workflow started
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          color: '#7851A9'
          details: "## > - **Backend CI Workflow started!**"
          footer: HORRAI.
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

#############################################################################

#############################################################################

  build-test:
    runs-on: ubuntu-latest 
    needs: [notify_Discord]
    defaults:
      run:
        shell: bash
    strategy:
          matrix:
            java-version: [17]


    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    - name: install maven
      run: mvn clean package -DskipTests
    - name: ls
      run: ls -lar target 
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-application-package
        path: ./target/app-0.0.1-SNAPSHOT.jar 
        
    - name: notify Backend  Build-test Stage Succeeded
      uses: rjstone/discord-webhook-notify@v1
      env:
        SHA: ${{ env.SHA }}

    

      
      if: success()
      with:
        severity: info
        details: "## > - **Build-test stage Succeeded**"
        footer: sha ${{ env.SHA }}
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}


          
    - name: Test Failure
      uses: rjstone/discord-webhook-notify@v1
      env:
        SHA: ${{ env.SHA }}
  
      if: failure()
      with:
        severity: error
        details: "## > - **Build-test stage Failed**"
        footer: sha ${{ env.SHA }}
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Test Cancelled
      uses: rjstone/discord-webhook-notify@v1
      if: cancelled()
      with:
        severity: warn
        details: "## > - **Build-test stage Cancelled!**"
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}



#############################################################################
#############################################################################


#  lint:
#    defaults:
#      run:
#        shell: bash
#        working-directory: ${{ github.workspace }}
#
#    needs: [build-test]
#    runs-on: ubuntu-latest
#    steps:
#      - name: short-sha
#        uses: benjlevesque/short-sha@v2.2
#        env:
#          SHA: ${{ steps.short-sha.outputs.sha }}
#
#
#      - uses: actions/checkout@v4
#        name: 'Checkout repository'
#
#
#      ##############################
#      # Run Linter against code base #
#      ################################
#
#      - name: Lint Code Base
#        uses: super-linter/super-linter/slim@v5
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          DISABLE_ERRORS: true
#
#      - name: notify Backend  lint Stage Succeeded
#        uses: rjstone/discord-webhook-notify@v1
#        if: success()
#        with:
#          severity: info
#          details: "## > - **Lint stage Succeeded** "
#          footer: sha ${{ env.SHA }}
#          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#        env:
#          SHA: ${{ env.SHA }}
#
#      - name: Test Failure
#        uses: rjstone/discord-webhook-notify@v1
#        if: failure()
#        with:
#          severity: error
#          details: "## > - **Lint stage Failed**"
#          footer: sha ${{ env.SHA }}
#          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#        env:
#          SHA: ${{ env.SHA }}
#
#      - name: Test Cancelled
#        uses: rjstone/discord-webhook-notify@v1
#        if: cancelled()
#        with:
#          severity: warn
#          details: "## > - **Lint Cancelled!**"
#          footer: sha ${{ env.SHA }}
#          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#        env:
#          SHA: ${{ env.SHA }}
#
#############################################################################
#
#############################################################################

#  analyze-codeQL:
#    name: Analyze code
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        shell: bash
#        working-directory: ${{ github.workspace }}
#
#    needs: [build-test]
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#
#
#    strategy:
#      fail-fast: false
#      matrix:
#        language: [ 'java' ]
#        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
#
#    steps:
#
#    - name: short-sha
#      uses: benjlevesque/short-sha@v2.2
#      env:
#        SHA: ${{ steps.short-sha.outputs.sha }}
#
#
#    - name: Checkout repository
#      uses: actions/checkout@v4
#
#    # Initializes the CodeQL tools for scanning.
#    - name: Initialize CodeQL
#      uses: github/codeql-action/init@v2
#      with:
#        languages: ${{ matrix.language }}
#        # If you wish to specify custom queries, you can do so here or in a config file.
#        # By default, queries listed here will override any specified in a config file.
#        # Prefix the list here with "+" to use these queries and those in the config file.
#        # queries: ./path/to/local/query, your-org/your-repo/queries@main
#
#    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
#    # If this step fails, then you should remove it and run the build manually (see below)
#
#    # - name: Autobuild
#    #   uses: github/codeql-action/autobuild@v2
#
#    - name: Set up JDK
#      uses: actions/setup-java@v3
#      with:
#        java-version: 17
#        distribution: 'temurin'
#
#    - name: install maven
#      run: mvn clean package -DskipTests
#
#    # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
#    #    and modify them (or add more) to build your code if your project
#    #    uses a compiled language
#
#    #- run: |
#    #   make bootstrap
#    #   make release
#
#    - name: Perform CodeQL Analysis
#      uses: github/codeql-action/analyze@v3
#
#
#
#    - name: notify analyze-codeQL Stage Succeeded
#      uses: rjstone/discord-webhook-notify@v1
#      if: success()
#      with:
#        severity: info
#        details: "##  > - **Analyze-codeQL stage Succeeded**"
#        footer: sha ${{ env.SHA }}
#        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#      env:
#        SHA: ${{ env.SHA }}
#    - name: Test Failure
#      uses: rjstone/discord-webhook-notify@v1
#      if: failure()
#      with:
#        severity: error
#        details: "##  > - **Analyze-codeQL stage Failed**"
#        footer: sha ${{ env.SHA }}
#        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#      env:
#        SHA: ${{ env.SHA }}
#    - name: Test Cancelled
#      uses: rjstone/discord-webhook-notify@v1
#      if: cancelled()
#      with:
#        severity: warn
#        details: "##  > - **Analyze-codeQL Cancelled!**"
#        footer: sha ${{ env.SHA }}
#        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#      env:
#          SHA: ${{ env.SHA }}

#############################################################################

#############################################################################
#  analyze-codacy:
#      needs: [build-test]
#      defaults:
#        run:
#          shell: bash
#          working-directory: ${{ github.workspace }}
#
#      permissions:
#        contents: read # for actions/checkout to fetch code
#        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
#      name: Codacy Security Scan
#      runs-on: ubuntu-latest
#      steps:
#
#        - name: short-sha
#          uses: benjlevesque/short-sha@v2.2
#          env:
#            SHA: ${{ steps.short-sha.outputs.sha }}
#
#        # Checkout the repository to the GitHub Actions runner
#        - name: Checkout code
#          uses: actions/checkout@v3
#
#        # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
#        - name: Run Codacy Analysis CLI
#          uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
#          with:
#            # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
#            # You can also omit the token and run the tools that support default configurations
#            project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
#            verbose: true
#            output: results.sarif
#            format: sarif
#            # Adjust severity of non-security issues
#            gh-code-scanning-compat: true
#            # Force 0 exit code to allow SARIF file generation
#            # This will handover control about PR rejection to the GitHub side
#            max-allowed-issues: 2147483647
#
#        # Upload the SARIF file generated in the previous step
#        - name: Upload SARIF results file
#          uses: github/codeql-action/upload-sarif@v2
#          with:
#            sarif_file: results.sarif
#
#        - name: notify analyze-codacy Stage Succeeded
#          uses: rjstone/discord-webhook-notify@v1
#          if: success()
#          with:
#            severity: info
#            details: "##  > - **Analyze-codacy stage Succeeded**"
#            footer: sha ${{ env.SHA }}
#            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#          env:
#            SHA: ${{ env.SHA }}
#        - name: Test Failure
#          uses: rjstone/discord-webhook-notify@v1
#          if: failure()
#          with:
#            severity: error
#            details: "##  > - **Analyze-codacy stage Failed**"
#            footer: sha ${{ env.SHA }}
#            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#          env:
#            SHA: ${{ env.SHA }}
#        - name: Test Cancelled
#          uses: rjstone/discord-webhook-notify@v1
#          if: cancelled()
#          with:
#            severity: warn
#            details: "##  > - **Analyze-codacy Cancelled!**"
#            footer: sha ${{ env.SHA }}
#            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
#          env:
#              SHA: ${{ env.SHA }}

############################################################################

############################################################################


#  Trivy-scan:
#    if: github.actor!= 'dependabot[bot]'
#    needs: [build-test]
#    defaults:
#      run:
#        shell: bash
#        working-directory: ${{ github.workspace }}/
#    permissions:
#      contents: read # for actions/checkout to fetch code
#      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
#    name: Trivy analysis
#    runs-on: "ubuntu-22.04"
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Build an image from Dockerfile
#        run: |
#          docker build -t docker.io/mostafaewida/hackmaze_backend_spring:${{ github.sha }}  .
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
#        with:
#          image-ref: 'docker.io/mostafaewida/hackmaze_backend_spring:${{ github.sha }}'
#          format: 'template'
#          template: '@/contrib/sarif.tpl'
#          output: 'trivy-results.sarif'
#          severity: 'CRITICAL,HIGH'
#
#      - name: Upload Trivy scan results to GitHub Security tab
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: 'trivy-results.sarif'

#############################################################################

#############################################################################

  push_to_Docker_Hub:
    
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

#    needs: [build-test, Trivy-scan, analyze-codacy, analyze-codeQL]
    needs: [build-test]
    if: github.actor != 'dependabot[bot]' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: short-sha
        uses: benjlevesque/short-sha@v2.2
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}
          
      - uses: actions/checkout@v3
      
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-application-package # Name of the artifact to download
          path: . # Directory to download the artifact to
        
      - run: ls -lar
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        

        
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}:latest
            ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}:${{ env.SHA }}


  
      - name: Clean up Docker Tags
        run: |
          #!/bin/bash
          
          REPO_NAME=${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}  # Replace with your Docker repository name
          USER_NAME=${{ secrets.DOCKERUSERNAME }}
          # Get list of tags for the repository
          TAGS=$(curl -sS "https://hub.docker.com/v2/repositories/${REPO_NAME}/tags/?page_size=10000" | jq -r '.results|.[]|.name')
          
          # Retain the first three tags (most recent)
          KEEP_TAGS=$(echo "$TAGS" | head -n 10)
          
          echo "All Tags: $TAGS"
          echo "Retaining Tags: $KEEP_TAGS"
          
          TOKEN=${{ secrets.DOCKERHUB_TOKEN }} # Replace with your Docker Hub Personal Access Token
          HUB_TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"$USER_NAME\", \"password\": \"$TOKEN\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          
          # Loop through all tags, delete those not in the retained list
          for tag in $TAGS; do
          
              if [[  "$KEEP_TAGS" =~ "$tag" ]]; then
                  echo "keeping $tag"
                  
              else
                  
                  response=$(curl -i -X DELETE   -H "Accept: application/json"   -H "Authorization: JWT $HUB_TOKEN"   https://hub.docker.com/v2/repositories/$REPO_NAME/tags/$tag/)
                  echo "Deleted tag: $tag - Response: $response"
                  
              fi
          done



      - name: notify Push to Dockerhub Stage Succeeded
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: "##  > - **Push to DockerHub stage Succeeded**"
          footer: sha ${{ env.SHA }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        env:
          SHA: ${{ env.SHA }}
            
      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: "##  > - **Push to DockerHub stage Failed**"
          footer: sha ${{ env.SHA }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        env:
          SHA: ${{ env.SHA }}
      - name: Test Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
          severity: warn
          details: "##  > - **Push to DockerHub Cancelled!**"
          footer: sha ${{ env.SHA }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
        env:
          SHA: ${{ env.SHA }}




############################################################################

############################################################################

      - name: notify Push to Dockerhub Stage Succeeded TO FRONT
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: "##  > - **Push to DockerHub BACKEND stage Succeeded**"
          footer: sha ${{ env.SHA }}
          webhookUrl: ${{ secrets.DISCORD_FRONT_WEBHOOK_URL }}
        env:
          SHA: ${{ env.SHA }}


############################################################################

############################################################################

  check_website:
    needs: [push_to_Docker_Hub]
    runs-on: ubuntu-latest
    outputs:
      website_up: ${{ steps.check.outputs.website_up }}
    steps:
    
    - name: check status trough a file 
      run: |
              echo '#!/bin/bash

              # Perform the curl command to check website availability
                curl --output /dev/null --silent --head --fail http://hackmaze.port0.org/services/ > /dev/null

              # Capture the exit status of the curl command
              status=$?
              echo $status' > status.sh 
              chmod +x status.sh 
              ./status.sh > status.txt
              
    - id: check
      run: |

            status=$(cat status.txt 2>/dev/null || echo "")
            
            if [ -z "$status" ]; then
              echo "status.txt is empty or not found. Assuming the website is down."
              echo "Website is down"
              echo "::set-output name=website_up::false"
            elif [ $status -eq 0 ]; then
              echo "Website is up"
              echo "::set-output name=website_up::true"
            else
              echo "Website is down"
              echo "::set-output name=website_up::false"
            fi
############################################################################

############################################################################
  deploy:
    if: github.actor != 'dependabot[bot]' && github.event_name == 'push' && needs.check_website.outputs.website_up == 'true'
    needs: [push_to_Docker_Hub,check_website]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - name: short-sha
      uses: benjlevesque/short-sha@v2.2
      env:
        SHA: ${{ steps.short-sha.outputs.sha }}
        
            
    - name: preparing the ssh
      run: |
          eval $(ssh-agent -s)
          mkdir ~/.ssh
          echo "${{ secrets.JUMP_KEY }}" > ~/.ssh/jumpkey.pem
          chmod 600 ~/.ssh/jumpkey.pem
          ssh-add ~/.ssh/jumpkey.pem


    - name: deploying frontend to the cluster
      run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/jumpkey.pem ${{ secrets.SSH_USER }}@${{ secrets.JUMP_IP }}  "ssh -i ${{ secrets.JUMP_PRIVATE_KEY_FILE }} ${{ secrets.SSH_USER }}@control ${{ secrets.DEPLOY_COMMAND }}"
    

          
    - name: notify deploy Stage Succeeded
      uses: rjstone/discord-webhook-notify@v1.0.4
      if: success()
      with:
          severity: info
          details: "##  > - **deploy stage Succeeded** "
          footer: sha ${{ env.SHA }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
      env:
        SHA: ${{ env.SHA }}
          
    - name: Test Failure
      uses: rjstone/discord-webhook-notify@v1.0.4
      if: failure()
      with:
          severity: error
          details: "##  > - **deploy stage Failed**"
          footer: you can try ut now
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
      env:
        SHA: ${{ env.SHA }}
    - name: Test Cancelled
      uses: rjstone/discord-webhook-notify@v1.0.4
      if: cancelled()
      with:
          severity: warn
          details: "##  > - **deploy Cancelled!**"
          footer: sha ${{ env.SHA }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
      env:
        SHA: ${{ env.SHA }}
        
############################################################################

############################################################################

  notify_Discord_CI_finish:
    if: github.actor!= 'dependabot[bot]'
    needs: [deploy]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
  
    steps:
      - name: notify backend CI Workflow finished
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
          severity: info
          color: '#7851A9'
          details: "## > - **backend CI Workflow Finished!**"
          footer: HORRAI.
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}




#############################################################################

#############################################################################





  deploy-azure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && github.event_name == 'push' && github.ref == 'refs/heads/deploy' && needs.check_website.outputs.website_up == 'false'
    needs: [push_to_Docker_Hub,check_website]
    steps:
    
      - name: deploy to azure
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          workflow: terraform-apply.yml
          repo: Hack-Maze/IaC
          ref: main


  notify_Discord_CI_finish-deploy:
    if: github.actor!= 'dependabot[bot]'
    needs: [deploy-azure]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: notify Frontend CI Workflow finished
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
            severity: info
            color: '#7851A9'
            details: "## > - **Frontend CI Workflow Finished!**"
            footer: HORRAI.
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
